@model HealthFit.Models.DTO.MealPlan.MealPlanDto
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger text-center">
        <strong>Lỗi:</strong> @TempData["ErrorMessage"]
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div id="popup-message" class="alert alert-success position-fixed text-center mx-auto"
         style="top: 20px; left: 0; right: 0; z-index: 9999; display: none; max-width: 600px;">
        @TempData["SuccessMessage"]
    </div>


    <script>
        window.addEventListener('DOMContentLoaded', function () {
            const popup = document.getElementById('popup-message');
            if (popup) {
                popup.style.display = 'block';
                setTimeout(() => {
                    popup.style.display = 'none';
                }, 3000); // 3 giây rồi tự ẩn
            }
        });
    </script>
}
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link href="https://fonts.googleapis.com/css?family=Poppins:200,300,400,500,600,700,800&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Lora:400,400i,700,700i&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Amatic+SC:400,700&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="~/css/open-iconic-bootstrap.min.css">
    <link rel="stylesheet" href="~/css/animate.css">

    <link rel="stylesheet" href="~/css/owl.carousel.min.css">
    <link rel="stylesheet" href="~/css/owl.theme.default.min.css">
    <link rel="stylesheet" href="~/css/magnific-popup.css">

    <link rel="stylesheet" href="~/css/aos.css">

    <link rel="stylesheet" href="~/css/ionicons.min.css">

    <link rel="stylesheet" href="~/css/bootstrap-datepicker.css">
    <link rel="stylesheet" href="~/css/jquery.timepicker.css">


    <link rel="stylesheet" href="~/css/flaticon.css">
    <link rel="stylesheet" href="~/css/icomoon.css">
    <link rel="stylesheet" href="~/css/style.css">
</head>
<body class="goto-here">

    <section class="ftco-section">
        <div class="container">
            <div class="row">
                <!-- Ảnh Combo -->
                <div class="col-lg-6 mb-5 ftco-animate">
                    <a class="image-popup">
                        <img src="@Model.ImageUrl" class="img-fluid" alt="Meal Plan Image">
                    </a>
                </div>

                <!-- Thông tin combo -->
                <div class="col-lg-6 product-details pl-md-5 ftco-animate">
                    <h3 class="font-weight-bold">@Model.MealPlanName</h3>

                    <div class="rating d-flex align-items-center mb-3">
                        <span class="mr-3" style="color: #000;">
                            <strong>@Model.QuantitySold</strong> <span style="color: #bbb;">đã bán</span>
                        </span>
                        <span class="badge @(Model.QuantityInStock > 0 ? "badge-success" : "badge-danger")">
                            @(Model.QuantityInStock > 0 ? "Còn hàng" : "Hết hàng")
                        </span>
                    </div>

                    <p class="price text-danger font-weight-bold mb-1">
                        <span>@Model.Price.ToString("N0") đ</span>
                    </p>

                    @if (Model.SavingsAmount > 0)
                    {
                        <p class="text-success font-weight-bold mb-3">
                            Tiết kiệm: @Model.SavingsAmount.ToString("N0") đ khi mua combo này
                        </p>
                    }

                    <!-- Sản phẩm trong combo -->
                    <div class="mt-4">
                        <h5 class="font-weight-bold mb-2">Sản phẩm trong combo:</h5>
                        <ul class="list-group mb-4">
                            @foreach (var product in Model.Products)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>@product.ProductName</strong><br />
                                        <small>Calo: @product.Calo</small>
                                    </div>
                                    <span class="badge badge-primary badge-pill">x @product.Quantity</span>
                                </li>
                            }
                        </ul>
                    </div>

                    <!-- Calo & BMI -->
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group d-flex align-items-center">
                                <label class="mr-2 mb-0 font-weight-bold">BMI:</label>
                                <span class="badge badge-warning p-2">@Model.Bmirange</span>
                            </div>
                        </div>
                    </div>

                    <!-- Số lượng chọn và trạng thái kho -->
                    <form asp-area="Customer" asp-controller="Cart" asp-action="AddToCart" method="post" onsubmit="return checkFormQuantity();">
                        @Html.AntiForgeryToken()

                        <!-- Ẩn thông tin combo -->
                        <input type="hidden" name="mealPlanDetailId" id="mealPlanDetailId" value="@Model.MealPlanId" />


                        <!-- Số lượng chọn -->
                        <div class="row mb-4">
                            <div class="col-md-6 d-flex">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <button type="button" class="btn btn-outline-secondary" onclick="updateQuantity(-1)">
                                            <i class="ion-ios-remove"></i>
                                        </button>
                                    </div>
                                    <input type="number" id="quantity" name="quantity" class="form-control text-center"
                                           value="1" min="1" max="@Model.QuantityInStock" step="1" oninput="validateQuantity()" />
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-outline-secondary" onclick="updateQuantity(1)">
                                            <i class="ion-ios-add"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 d-flex align-items-center">
                                <p class="mb-0" style="color: #000;">
                                    <strong>@Model.QuantityInStock</strong> combo có thể đặt
                                </p>
                            </div>
                        </div>

                        <div class="text-danger mb-3" id="quantity-error" style="display:none;"></div>

                        <!-- Nút Thêm vào giỏ -->
                        <input type="submit" class="btn btn-black py-3 px-5" value="Thêm combo vào giỏ hàng">
                    </form>

                    <script>
                        const quantityInput = document.getElementById("quantity");
                        const errorDiv = document.getElementById("quantity-error");
                        const maxStock = parseInt(quantityInput.max);

                        function updateQuantity(delta) {
                            let value = parseInt(quantityInput.value) || 1;
                            value = Math.max(1, Math.min(maxStock, value + delta));
                            quantityInput.value = value;
                            validateQuantity();
                        }

                        function validateQuantity() {
                            const value = quantityInput.value;

                            if (!/^\d+$/.test(value) || parseInt(value) < 1 || parseInt(value) > maxStock) {
                                errorDiv.style.display = "block";
                                errorDiv.innerText = `Vui lòng nhập số nguyên từ 1 đến ${maxStock}`;
                            } else {
                                errorDiv.style.display = "none";
                                errorDiv.innerText = "";
                            }
                        }

                        function checkFormQuantity() {
                            const value = quantityInput.value;
                            if (!/^\d+$/.test(value) || parseInt(value) < 1 || parseInt(value) > maxStock) {
                                errorDiv.style.display = "block";
                                errorDiv.innerText = `Số lượng không hợp lệ! Chỉ còn ${maxStock} combo.`;
                                return false;
                            }
                            return true;
                        }
                    </script>
                </div>
            </div>
        </div>
    </section>



    <script src="~/js/jquery.min.js"></script>
    <script src="~/js/jquery-migrate-3.0.1.min.js"></script>
    <script src="~/js/popper.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/js/jquery.easing.1.3.js"></script>
    <script src="~/js/jquery.waypoints.min.js"></script>
    <script src="~/js/jquery.stellar.min.js"></script>
    <script src="~/js/owl.carousel.min.js"></script>
    <script src="~/js/jquery.magnific-popup.min.js"></script>
    <script src="~/js/aos.js"></script>
    <script src="~/js/jquery.animateNumber.min.js"></script>
    <script src="~/js/bootstrap-datepicker.js"></script>
    <script src="~/js/scrollax.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
    <script src="~/js/google-map.js"></script>
    <script src="~/js/main.js"></script>

</body>
</html>